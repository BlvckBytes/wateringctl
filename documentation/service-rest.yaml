openapi: 3.0.0

info:
  title: wateringctl
  description: API contract for the communication with the wateringctl-firmware
  version: 0.0.1

paths:
  /scheduler:
    get:
      tags:
      - "scheduler"
      summary: "Get the current schedule"
      responses:
        "200":
          description: "Fetch successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schedule"

  /scheduler/{day}:
    put:
      tags:
      - "scheduler"
      summary: "Alter the properties of a specific day"
      parameters:
        - name: day
          in: path
          schema:
            $ref: "#/components/schemas/WeekDay"
          required: true
      requestBody:
        $ref: "#/components/requestBodies/ScheduledDayRequest"
      responses:
        "200":
          description: "Update successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduledDay"
        "400":
          description: "Malformed request"
    get:
      tags:
      - "scheduler"
      summary: "Get the schedule of a specific day"
      responses:
        "200":
          description: "Fetch successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduledDay"
        "400":
          description: "Malformed request"

  /scheduler/{day}/{index}:
    put:
      tags:
      - "scheduler"
      summary: "Alter a interval of a specific slot (by index) of a specific day"
      parameters:
        - name: day
          in: path
          schema:
            $ref: "#/components/schemas/WeekDay"
          required: true
        - name: index
          in: path
          schema:
            type: number
          required: true
      requestBody:
        $ref: "#/components/requestBodies/IntervalRequest"
      responses:
        "200":
          description: "Update successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Interval"
        "400":
          description: "Malformed request"

    delete:
      tags:
      - "scheduler"
      summary: "Delete an interval of a specific slot (by index) of a specific day"
      parameters:
        - name: day
          in: path
          schema:
            $ref: "#/components/schemas/WeekDay"
          required: true
        - name: index
          in: path
          schema:
            type: number
          required: true
      responses:
        "204":
          description: "Deletion successful"
        "400":
          description: "Malformed request"

  /valves:
    get:
      tags:
      - "valves"
      summary: "Get all available valves"
      responses:
        "200":
          description: "Fetch successful"
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Valve"

  /valves/{id}:
    delete:
      tags:
      - "valves"
      summary: "Turn a valve off by id"
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      responses:
        "204":
          description: "Valve turned off successfully"
        "409":
          description: "Valve not active"
        "400":
          description: "Malformed request"

    post:
      tags:
      - "valves"
      summary: "Turn a valve on by id"
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      responses:
        "204":
          description: "Valve turned on successfully"
        "409":
          description: "Valve already active"
        "400":
          description: "Malformed request"

  /valves/{id}/timer:
    delete:
      tags:
      - "valves"
      summary: "Clear out an active timer"
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      responses:
        "204":
          description: "Timer cleared successfully"
        "409":
          description: "Timer not active"
        "400":
          description: "Malformed request"

    post:
      tags:
      - "valves"
      summary: "Activate the valves timer"
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        $ref: "#/components/requestBodies/TimerRequest"
      responses:
        "204":
          description: "Timer activated successfully"
        "409":
          description: "Timer already active"
        "400":
          description: "Malformed request"

  /fs:
    get:
      tags:
      - "fs"
      summary: "List a directory or get a file's contents"
      parameters:
        - in: query
          name: path
          schema:
            type: string
          description: "The path to list all files from"
          required: true
        - in: query
          name: isDirectory
          schema:
            type: boolean
          description: "Whether or not a directory is expected (listing files vs. printing content)"
          required: false
      responses:
        "200":
          description: "Directory listed successful"
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/File"
        "404":
          description: "Requested directory at path not existing"

    post:
      tags:
      - "fs"
      summary: "Upload a new file or make a new directory"
      parameters:
        - in: query
          name: path
          schema:
            type: string
          description: "The path to create at"
          required: true
        - in: query
          name: isDirectory
          schema:
            type: boolean
          description: "Whether or not to create a directory at the path"
          required: false
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        "201":
          description: "File or directory created"
        "204":
          description: "Directory already existed"
        "404":
          description: "Requested path does not exist"

    delete:
      tags:
      - "fs"
      summary: "Delete a file or a directory"
      parameters:
        - in: query
          name: path
          schema:
            type: string
          description: "The path to list all files from"
          required: true
        - in: query
          name: recursively
          schema:
            type: boolean
          description: "Whether or not to delete recursively (only applies for directories)"
          required: false
      responses:
        "204":
          description: "Target deleted successfully"
        "404":
          description: "Requested path does not exist"

components:
  requestBodies:
    IntervalRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Interval'

    ValveRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Valve'

    ScheduledDayRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduledDay'

    TimerRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Timer'
  schemas:
    Interval:
      type: object
      properties:
        start:
          type: string
        end:
          type: string
        identifier:
          type: number
        index:
          type: number
          readOnly: true
        active:
          readOnly: true
          type: boolean
    Timer:
      type: object
      properties:
        duration:
          type: string
    ScheduledDay:
      type: object
      properties:
        disabled:
          type: boolean
        intervals:
          readOnly: true
          type: array
          items:
            $ref: "#/components/schemas/Interval"
    WeekDay:
      type: string
      enum:
        - WEEKDAY_SU
        - WEEKDAY_MO
        - WEEKDAY_TU
        - WEEKDAY_WE
        - WEEKDAY_TH
        - WEEKDAY_FR
        - WEEKDAY_SA
    Scheduler:
      type: object
      properties:
        lastTickTime:
          readOnly: true
          type: string
        lastTickDay:
          readOnly: true
          type: string
    Schedule:
      type: object
      properties:
        days:
          type: object
          properties:
            WEEKDAY_SU:
              $ref: "#/components/schemas/ScheduledDay"
            WEEKDAY_MO:
              $ref: "#/components/schemas/ScheduledDay"
            WEEKDAY_TU:
              $ref: "#/components/schemas/ScheduledDay"
            WEEKDAY_WE:
              $ref: "#/components/schemas/ScheduledDay"
            WEEKDAY_TH:
              $ref: "#/components/schemas/ScheduledDay"
            WEEKDAY_FR:
              $ref: "#/components/schemas/ScheduledDay"
            WEEKDAY_SA:
              $ref: "#/components/schemas/ScheduledDay"
        scheduler:
          $ref: "#/components/schemas/Scheduler"
    Valve:
      type: object
      properties:
        alias:
          type: string
        disabled:
          type: boolean
        state:
          type: boolean
          readOnly: true
        identifier:
          type: number
          readOnly: true
        timer:
          type: string
    File:
      type: object
      properties:
        isDirectory:
          type: boolean
        name:
          type: string
        size:
          type: number